{
  "builders": [
    {
      "type": "vmware-vmx",
      "source_path": "./output-f-{{ user `vm_name` }}-base/win2016-base.vmx",
      "output_directory": "./output-f-{{ user `vm_name` }}-ready/",
      "headless": "{{user `headless`}}",
      "boot_wait": "2m",
      "ssh_username": "vagrant",
      "ssh_password": "vagrant",
      "ssh_wait_timeout": "6h",
      "shutdown_command": "shutdown /s /t 10 /f /d p:4:1 /c \"Packer Shutdown\""
    },
    {
      "type": "virtualbox-ovf",
      "source_path": "./output-vb-{{ user `vm_name` }}-base/win2016-base.ovf",
      "output_directory": "./output-vb-{{ user `os_vm_namename` }}-ready/",
      "headless": "{{user `headless`}}",
      "boot_wait": "2m",
      "ssh_username": "vagrant",
      "ssh_password": "vagrant",
      "ssh_wait_timeout": "6h",
      "shutdown_command": "shutdown /s /t 10 /f /d p:4:1 /c \"Packer Shutdown\"",
      "guest_additions_mode": "disable",
      "vboxmanage": [
        [
          "modifyvm",
          "{{.Name}}",
          "--memory",
          "{{ user `memory` }}"
        ],
        [
          "modifyvm",
          "{{.Name}}",
          "--vram",
          "48"
        ],
        [
          "modifyvm",
          "{{.Name}}",
          "--cpus",
          "{{ user `cpus` }}"
        ]
      ]
    }
  ],
  "provisioners": [
    {
      "type": "shell",
      "remote_path": "/tmp/script.bat",
      "execute_command": "{{.Vars}} cmd /c C:/Windows/Temp/script.bat",
      "scripts": [
        "./scripts/batch/vagrant-ssh.bat",
        "./scripts/batch/enable-rdp.bat"
      ]
    },
    {
      "type": "powershell",
      "scripts": [
        "./scripts/powershell/setup-proxy.ps1",
        "./scripts/powershell/setup-win_step1.ps1"
      ]
    },
    {
      "type": "windows-restart",
      "restart_command": "powershell \"& {(Get-WmiObject win32_operatingsystem).LastBootUpTime > C:\\ProgramData\\lastboot.txt; Restart-Computer -force}\"",
      "restart_check_command": "powershell -command \"& {if ((get-content C:\\ProgramData\\lastboot.txt) -eq (Get-WmiObject win32_operatingsystem).LastBootUpTime) {Write-Output 'Sleeping for 600 seconds to wait for reboot'; start-sleep 600} else {Write-Output 'Reboot completed. Guest restarted.'}}\"",
      "restart_timeout": "20m"
    },
    {
      "type": "powershell",
      "scripts": [
        "./scripts/powershell/setup-win_step2.ps1",
        "./scripts/powershell/install-chocolatey.ps1",
        "./scripts/powershell/install-psgallery.ps1",
        "./scripts/powershell/disable-hibernate.ps1",
        "./scripts/powershell/optimize-drive.ps1"
      ]
    },
    {
      "type": "windows-restart",
      "restart_command": "powershell \"& {(Get-WmiObject win32_operatingsystem).LastBootUpTime > C:\\ProgramData\\lastboot.txt; Restart-Computer -force}\"",
      "restart_check_command": "powershell -command \"& {if ((get-content C:\\ProgramData\\lastboot.txt) -eq (Get-WmiObject win32_operatingsystem).LastBootUpTime) {Write-Output 'Sleeping for 600 seconds to wait for reboot'; start-sleep 600} else {Write-Output 'Reboot completed. Guest restarted.'}}\"",
      "restart_timeout": "20m"
    },
    {
      "type": "shell",
      "remote_path": "/tmp/script.bat",
      "execute_command": "{{.Vars}} cmd /c C:/Windows/Temp/script.bat",
      "scripts": [
        "./scripts/batch/compile-dotnet-assemblies.bat",
        "./scripts/batch/compact.bat"
      ]
    },
    {
      "type": "powershell",
      "scripts": [
        "./scripts/powershell/setup-sysprep.ps1",
        "./scripts/powershell/disable-autologin.ps1"
      ]
    }
  ],
  "variables": {
   
    "headless": "false",
    "cpus": "2",
    "memory": "4096",
    "vm_name": "win2016"
  }
}